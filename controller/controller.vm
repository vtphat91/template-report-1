#parse("/include/packages_variables.vm")
#parse("/include/init_var_entity.vm")
#parse("/include/java_header.vm")

#set( $urlEntityName = $fn.toLowerCase($entity.name))
#set( $uncapitalizedEntityName = $fn.uncapitalize($entity.name) )
#set( $referencedEntities = $entity.referencedEntityTypes() )
#set( $serviceName = "${entity.name}Service")
#set( $uncapitalizedServiceName = $fn.uncapitalize($serviceName) )
#set( $searchDtoName = "${entity.name}SearchDto")
#set( $reportDto = "${entity.name}ReportDto")

package ${target.javaPackageFromFolder($SRC)};

import javax.servlet.http.HttpServletResponse;
import java.util.ArrayList;
import java.util.Locale;
import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import vn.com.unit.constant.ConstantCore;
import vn.com.unit.constant.Message;
import vn.com.unit.constant.MessageList;
import vn.com.unit.jcanary.authentication.UserProfileUtils;
import vn.com.unit.jcanary.common.PageWrapper;
import vn.com.unit.jcanary.constant.UrlConst;
import vn.com.unit.jcanary.constant.ViewConstant;
import vn.com.unit.jcanary.controller.AbstractController;
import vn.com.unit.jcanary.utils.SearchUtil;
import org.springframework.web.bind.annotation.PostMapping;

//--- import Dto Report
import ${dtoPackage}.${entity.name}ReportDto;
//--- import SearchDto
import ${dtoPackage}.${searchDtoName};
//--- import $searchDtoName
import ${servicePackage}.${serviceName};

/**
 * Spring MVC controller for '${entity.name}' management.
 */
@Controller
@RequestMapping("/${urlEntityName}")
public class ${entity.name}Controller extends AbstractController {

	private static final String VIEW_LIST = "${urlEntityName}.list";
    
    private static final String VIEW_TABLE = "${urlEntityName}.table";
    
    /**Define Role for this page - ROLE_AUTHED for default*/
    private static final String SCREEN_FUNCTION_CODE = "ROLE_AUTHED"; // RoleConstant.${entity.name}
	
	@Autowired
    private MessageSource msg;

	@Autowired
    private ${serviceName} ${uncapitalizedServiceName};

	/**
     * showList
     *
     * @param searchDto
     * @param page
     * @param locale
     * @return
     * @author phatvt
     */
    @GetMapping(UrlConst.LIST)
    public ModelAndView showList(@ModelAttribute(value = "searchDto") ${searchDtoName} searchDto
            , @RequestParam(value = "page", required = false, defaultValue = "1") int page, Locale locale)  {
        // Security for this page.
        if(this.securityForPage()){
			return new ModelAndView(ViewConstant.ACCESS_DENIED_MODELANDVIEW);
		}
        
        ModelAndView mav = new ModelAndView(VIEW_LIST);

        PageWrapper<$reportDto> pageWrapper = ${uncapitalizedServiceName}.doSearch(page, searchDto);
		if(pageWrapper.getData()== null) {
        	pageWrapper.setData(new ArrayList<>());
        }
        mav.addObject("pageWrapper", pageWrapper);
        mav.addObject("searchDto", searchDto);
        return mav;
    }

	/**
     * ajaxList
     *
     * @param searchDto
     * @param page
     * @param locale
     * @return
     * @author phatvt
     */
    @PostMapping(UrlConst.AJAXLIST)
    public ModelAndView ajaxListEmail(@ModelAttribute(value = "searchDto") ${searchDtoName} searchDto
            , @RequestParam(value = "page", required = false, defaultValue = "1") int page, Locale locale)  {
        ModelAndView mav = new ModelAndView(VIEW_TABLE);
        // Security for this page.
        if(this.securityForPage()){
			return new ModelAndView(ViewConstant.ACCESS_DENIED_MODELANDVIEW);
		}
        PageWrapper<${reportDto}> pageWrapper = ${uncapitalizedServiceName}.doSearch(page, searchDto);
        if( pageWrapper.getData() == null ) {
           pageWrapper.setData( new ArrayList<>());
        }
        
        mav.addObject("pageWrapper", pageWrapper);
        mav.addObject("searchDto", searchDto);
        return mav;
    }

	/**
	 * 
	 * @param systemLogsDto
	 * @param req
	 * @param res
	 * @param locale
	 * @author phatvt
	 */
	@PostMapping("/export-excel")
    public void exportListNonExport(@ModelAttribute(value = "searchDto") $searchDtoName searchDto, HttpServletRequest req,
            HttpServletResponse res, Locale locale) {
        try {
            ${uncapitalizedServiceName}.exportExcel(searchDto, res, locale);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
	
	private boolean securityForPage(){
		return (!UserProfileUtils.hasRole(SCREEN_FUNCTION_CODE)
                && !UserProfileUtils.hasRole(SCREEN_FUNCTION_CODE.concat(ConstantCore.COLON_DISP))
                && !UserProfileUtils.hasRole(SCREEN_FUNCTION_CODE.concat(ConstantCore.COLON_EDIT))); 
	}
}
